/**
 * IdCheck.IO API
 * Check identity documents
 *
 * OpenAPI spec version: 0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['invoker/ApiClient', 'invoker/model/CheckSummaryOfTheSubmittedDocument', 'invoker/model/ClassificationOfTheSubmittedDocument', 'invoker/model/Control', 'invoker/model/ControlGroup', 'invoker/model/DetailedInformationOfTheHolderOfTheSubmittedDocument', 'invoker/model/DetailedInformationOfTheSubmittedDocument', 'invoker/model/ErrorResponse', 'invoker/model/EventDate', 'invoker/model/ExtractedImage', 'invoker/model/GenericData', 'invoker/model/HealthResponse', 'invoker/model/Image', 'invoker/model/ImageIndicator', 'invoker/model/ImageListResponse', 'invoker/model/ImageRequest', 'invoker/model/Mrz', 'invoker/model/MrzListResponse', 'invoker/model/MrzRequest', 'invoker/model/MrzResponse', 'invoker/model/ReportResponse', 'invoker/model/ResultResponse', 'invoker/model/TaskResponse', 'invoker/model/UserResponse', 'invoker/api/AdministrationApi', 'invoker/api/AnalysisApi', 'invoker/api/SandboxApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/CheckSummaryOfTheSubmittedDocument'), require('./model/ClassificationOfTheSubmittedDocument'), require('./model/Control'), require('./model/ControlGroup'), require('./model/DetailedInformationOfTheHolderOfTheSubmittedDocument'), require('./model/DetailedInformationOfTheSubmittedDocument'), require('./model/ErrorResponse'), require('./model/EventDate'), require('./model/ExtractedImage'), require('./model/GenericData'), require('./model/HealthResponse'), require('./model/Image'), require('./model/ImageIndicator'), require('./model/ImageListResponse'), require('./model/ImageRequest'), require('./model/Mrz'), require('./model/MrzListResponse'), require('./model/MrzRequest'), require('./model/MrzResponse'), require('./model/ReportResponse'), require('./model/ResultResponse'), require('./model/TaskResponse'), require('./model/UserResponse'), require('./api/AdministrationApi'), require('./api/AnalysisApi'), require('./api/SandboxApi'));
  }
}(function(ApiClient, CheckSummaryOfTheSubmittedDocument, ClassificationOfTheSubmittedDocument, Control, ControlGroup, DetailedInformationOfTheHolderOfTheSubmittedDocument, DetailedInformationOfTheSubmittedDocument, ErrorResponse, EventDate, ExtractedImage, GenericData, HealthResponse, Image, ImageIndicator, ImageListResponse, ImageRequest, Mrz, MrzListResponse, MrzRequest, MrzResponse, ReportResponse, ResultResponse, TaskResponse, UserResponse, AdministrationApi, AnalysisApi, SandboxApi) {
  'use strict';

  /**
   * Check_identity_documents.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var idcheckio_nodejs_client = require('invoker/index'); // See note below*.
   * var xxxSvc = new idcheckio_nodejs_client.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new idcheckio_nodejs_client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['invoker/index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new idcheckio_nodejs_client.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new idcheckio_nodejs_client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module invoker/index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:invoker/ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The CheckSummaryOfTheSubmittedDocument model constructor.
     * @property {module:invoker/model/CheckSummaryOfTheSubmittedDocument}
     */
    CheckSummaryOfTheSubmittedDocument: CheckSummaryOfTheSubmittedDocument,
    /**
     * The ClassificationOfTheSubmittedDocument model constructor.
     * @property {module:invoker/model/ClassificationOfTheSubmittedDocument}
     */
    ClassificationOfTheSubmittedDocument: ClassificationOfTheSubmittedDocument,
    /**
     * The Control model constructor.
     * @property {module:invoker/model/Control}
     */
    Control: Control,
    /**
     * The ControlGroup model constructor.
     * @property {module:invoker/model/ControlGroup}
     */
    ControlGroup: ControlGroup,
    /**
     * The DetailedInformationOfTheHolderOfTheSubmittedDocument model constructor.
     * @property {module:invoker/model/DetailedInformationOfTheHolderOfTheSubmittedDocument}
     */
    DetailedInformationOfTheHolderOfTheSubmittedDocument: DetailedInformationOfTheHolderOfTheSubmittedDocument,
    /**
     * The DetailedInformationOfTheSubmittedDocument model constructor.
     * @property {module:invoker/model/DetailedInformationOfTheSubmittedDocument}
     */
    DetailedInformationOfTheSubmittedDocument: DetailedInformationOfTheSubmittedDocument,
    /**
     * The ErrorResponse model constructor.
     * @property {module:invoker/model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The EventDate model constructor.
     * @property {module:invoker/model/EventDate}
     */
    EventDate: EventDate,
    /**
     * The ExtractedImage model constructor.
     * @property {module:invoker/model/ExtractedImage}
     */
    ExtractedImage: ExtractedImage,
    /**
     * The GenericData model constructor.
     * @property {module:invoker/model/GenericData}
     */
    GenericData: GenericData,
    /**
     * The HealthResponse model constructor.
     * @property {module:invoker/model/HealthResponse}
     */
    HealthResponse: HealthResponse,
    /**
     * The Image model constructor.
     * @property {module:invoker/model/Image}
     */
    Image: Image,
    /**
     * The ImageIndicator model constructor.
     * @property {module:invoker/model/ImageIndicator}
     */
    ImageIndicator: ImageIndicator,
    /**
     * The ImageListResponse model constructor.
     * @property {module:invoker/model/ImageListResponse}
     */
    ImageListResponse: ImageListResponse,
    /**
     * The ImageRequest model constructor.
     * @property {module:invoker/model/ImageRequest}
     */
    ImageRequest: ImageRequest,
    /**
     * The Mrz model constructor.
     * @property {module:invoker/model/Mrz}
     */
    Mrz: Mrz,
    /**
     * The MrzListResponse model constructor.
     * @property {module:invoker/model/MrzListResponse}
     */
    MrzListResponse: MrzListResponse,
    /**
     * The MrzRequest model constructor.
     * @property {module:invoker/model/MrzRequest}
     */
    MrzRequest: MrzRequest,
    /**
     * The MrzResponse model constructor.
     * @property {module:invoker/model/MrzResponse}
     */
    MrzResponse: MrzResponse,
    /**
     * The ReportResponse model constructor.
     * @property {module:invoker/model/ReportResponse}
     */
    ReportResponse: ReportResponse,
    /**
     * The ResultResponse model constructor.
     * @property {module:invoker/model/ResultResponse}
     */
    ResultResponse: ResultResponse,
    /**
     * The TaskResponse model constructor.
     * @property {module:invoker/model/TaskResponse}
     */
    TaskResponse: TaskResponse,
    /**
     * The UserResponse model constructor.
     * @property {module:invoker/model/UserResponse}
     */
    UserResponse: UserResponse,
    /**
     * The AdministrationApi service constructor.
     * @property {module:invoker/api/AdministrationApi}
     */
    AdministrationApi: AdministrationApi,
    /**
     * The AnalysisApi service constructor.
     * @property {module:invoker/api/AnalysisApi}
     */
    AnalysisApi: AnalysisApi,
    /**
     * The SandboxApi service constructor.
     * @property {module:invoker/api/SandboxApi}
     */
    SandboxApi: SandboxApi
  };

  return exports;
}));
