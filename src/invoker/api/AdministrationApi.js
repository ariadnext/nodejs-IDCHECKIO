/**
 * IdCheck.IO API
 * Check identity documents
 *
 * OpenAPI spec version: 0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['invoker/ApiClient', 'invoker/model/ErrorResponse', 'invoker/model/HealthResponse', 'invoker/model/UserResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorResponse'), require('../model/HealthResponse'), require('../model/UserResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.idcheckio_nodejs_client) {
      root.idcheckio_nodejs_client = {};
    }
    root.idcheckio_nodejs_client.AdministrationApi = factory(root.idcheckio_nodejs_client.ApiClient, root.idcheckio_nodejs_client.ErrorResponse, root.idcheckio_nodejs_client.HealthResponse, root.idcheckio_nodejs_client.UserResponse);
  }
}(this, function(ApiClient, ErrorResponse, HealthResponse, UserResponse) {
  'use strict';

  /**
   * Administration service.
   * @module invoker/api/AdministrationApi
   * @version 1.0.0
   */

  /**
   * Constructs a new AdministrationApi. 
   * @alias module:invoker/api/AdministrationApi
   * @class
   * @param {module:invoker/ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:invoker/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getHealth operation.
     * @callback module:invoker/api/AdministrationApi~getHealthCallback
     * @param {String} error Error message, if any.
     * @param {module:invoker/model/HealthResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * HTTP GET health
     * GET server health (OK 200)
     * @param {module:invoker/api/AdministrationApi~getHealthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:invoker/model/HealthResponse}
     */
    this.getHealth = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = HealthResponse;

      return this.apiClient.callApi(
        '/v0/admin/health', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUser operation.
     * @callback module:invoker/api/AdministrationApi~getUserCallback
     * @param {String} error Error message, if any.
     * @param {module:invoker/model/UserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * HTTP GET user
     * Get user informations
     * @param {Object} opts Optional parameters
     * @param {String} opts.acceptLanguage Accept language header
     * @param {module:invoker/api/AdministrationApi~getUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:invoker/model/UserResponse}
     */
    this.getUser = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      var formParams = {
      };

      var authNames = ['basic'];
      var contentTypes = [];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = UserResponse;

      return this.apiClient.callApi(
        '/v0/admin/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
